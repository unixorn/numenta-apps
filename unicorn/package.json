{
  "build": {
    "app-bundle-id": "com.numenta.apps.unicorn",
    "app-category-type": "public.app-category.developer-tools",
    "iconUrl": "https://raw.githubusercontent.com/numenta/numenta-apps/master/unicorn/build/icon.ico",
    "asar": false
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/numenta/numenta-apps/tree/master/unicorn"
  },
  "license": "SEE LICENSE IN LICENSE.txt",
  "engines": {
    "node": "5.10.0"
  },
  "python": "app/node_modules/.bin/python",
  "scripts": {
    "preinstall": "node scripts/download_python.js",
    "postinstall": "install-app-deps",
    "build:osx": "npm install && npm run prepare && npm run dist:osx",
    "build:win": "npm install && npm run prepare && npm run dist:win",
    "pack:osx": "build --platform darwin --arch x64",
    "pack:win": "build --platform win32 --arch x64",
    "dist:osx": "build --platform darwin --arch x64",
    "dist:win": "build --platform win32 --arch x64",
    "clean": "npm install rimraf && npm run clean:dist && npm run clean:docs && npm run clean:python && npm run clean:webpack && npm run clean:npm",
    "clean:backend": "npm run clean:python && rimraf app/node_modules/portable_python_darwin/lib/python2.7/site-packages/unicorn_backend*",
    "clean:dist": "rimraf dist/",
    "clean:osx": "rimraf dist/*-darwin-x64",
    "clean:win": "rimraf dist/win",
    "clean:db:osx": "rimraf $HOME/Library/Application\\ Support/HTM\\ Studio/*",
    "clean:docs": "rimraf docs/",
    "clean:coverage": "rimraf coverage/",
    "clean:npm": "rimraf app/node_modules/ && rimraf node_modules/ && npm cache clean",
    "clean:portable_python:osx": "rimraf scripts/OSX/portable_python.tar.gz",
    "clean:portable_python:win": "rimraf scripts/Windows64/portable_python.tar.gz",
    "clean:python": "rimraf py/build && rimraf py/dist && rimraf py/*.egg-info",
    "clean:webpack": "rimraf app/browser/assets/bundle",
    "electron": "electron app",
    "electron:dev": "cross-env NODE_ENV=development electron app",
    "electron:debug": "cross-env NODE_ENV=development electron --debug=5858 app",
    "dev": "npm run prepare:dev && npm run electron:dev",
    "dev:debug": "npm run prepare:dev && npm run electron:debug",
    "dev:inspect": "node-inspector",
    "desktop": "npm run prepare && npm run electron",
    "docs": "npm run docs:build && npm run docs:open",
    "docs:build": "esdoc -c esdoc.json",
    "docs:open": "open-url file://${PWD}/docs/index.html",
    "lint": "eslint --ext=js --ext=jsx app/ tests/js/",
    "prepare": "npm run lint && cross-env NODE_ENV=production webpack",
    "prepare:dev": "npm run lint && cross-env NODE_ENV=development webpack",
    "test": "npm run prepare && npm run test:unit && npm run test:integration",
    "test:integration": "mocha --opts tests/js/mocha.opts tests/js/integration",
    "test:unit": "mocha --opts tests/js/mocha.opts tests/js/unit",
    "pretest:coverage": "npm run clean:coverage && npm run clean:docs && npm run clean:webpack",
    "test:coverage": "isparta cover --include '**/*.jsx' --include '**/*.js' --include-all-sources  --exclude **/bundle.js _mocha -- --opts tests/js/mocha.opts tests/js/{unit,integration}",
    "test:pipeline:coverage": "isparta cover --report clover --report html --include '**/*.jsx' --include '**/*.js' --include-all-sources -x **/bundle.* _mocha -- --opts tests/js/mocha.opts tests/js/{unit,integration}",
    "posttest:coverage": "open-url file://${PWD}/coverage/lcov-report/index.html",
    "test:backend": "npm run test:backend:unit && npm run test:backend:integration",
    "pretest:backend:integration": "mkdir -p test-reports",
    "test:backend:integration": "$npm_package_python -m pytest tests/py/integration --junitxml test-reports/unicorn_backend_integration.xml",
    "pretest:backend:unit": "mkdir -p test-reports",
    "test:backend:unit": "$npm_package_python -m pytest tests/py/unit --junitxml test-reports/unicorn_backend_unit.xml",
    "pretest:pipeline": "npm run prepare && mkdir -p test-reports",
    "test:pipeline": "npm run test:pipeline:unit && npm run test:pipeline:integration",
    "test:pipeline:integration": "mocha --opts tests/js/mocha.pipeline.opts tests/js/integration",
    "test:pipeline:unit": "mocha --opts tests/js/mocha.pipeline.opts tests/js/unit",
    "pretest:functional": "chromedriver --url-base=/wd/hub &",
    "test:functional": "mocha --opts tests/js/mocha.opts tests/js/functional",
    "posttest:functional": "killall chromedriver"
  },
  "devDependencies": {
    "babel-cli": "6.6.5",
    "babel-core": "6.7.2",
    "babel-eslint": "4.1.8",
    "babel-loader": "6.2.4",
    "babel-plugin-add-module-exports": "0.1.2",
    "babel-plugin-transform-decorators-legacy": "1.3.4",
    "babel-polyfill": "6.7.2",
    "babel-preset-es2015-node5": "1.2.0",
    "babel-preset-react": "6.5.0",
    "babel-preset-stage-0": "6.5.0",
    "babel-register": "6.7.2",
    "cross-env": "1.0.8",
    "css-loader": "0.23.1",
    "csv-streamify": "3.0.3",
    "electron-builder": "3.26.3",
    "electron-debug": "0.5.2",
    "electron-prebuilt": "0.37.6",
    "esdoc": "0.4.7",
    "esdoc-es7-plugin": "0.0.3",
    "eslint": "7.12.0",
    "eslint-plugin-react": "3.16.1",
    "file-loader": "0.8.5",
    "fluxible": "1.0.4",
    "isparta": "4.0.0",
    "json-loader": "0.5.4",
    "json-schema-instantiator": "0.3.0",
    "lev": "3.3.1",
    "mocha": "2.4.5",
    "mocha-bamboo-reporter": "1.1.0",
    "moment": "2.11.2",
    "node-inspector": "0.12.7",
    "open-url": "2.0.2",
    "rimraf": "2.5.2",
    "source-map-support": "0.4.0",
    "style-loader": "0.13.0",
    "url-loader": "0.5.7",
    "webdriverio": "4.0.4",
    "webpack": "1.12.14"
  }
}
